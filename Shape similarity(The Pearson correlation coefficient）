from sys import argv
script=argv
import pygame
from pygame.locals import *
from sys import exit
from random import*
import datetime
import time
from math import sqrt
 
pygame.init()
screen= pygame.display.set_mode((1000, 1000), 0, 32)
screen.fill((41,41,41))
output=open('super.txt','a') 
factor=0.
clock=pygame.time.Clock()

show_tri=[]
new_tri=[]
try_tri=[]
count=0



def sequence(x):

    
    list1=[0,1,2,3]
    list2=[]
    for i in range(x):
        if i%4==0:
            list1=[0,1,2,3]
        num=choice(list1)
        list2.append(num)
        list1.remove(num)
    return list2
        
def show_point1(list):
    x=0
    y=0
    list=[]
    for i in list:
        if i==0:
            x=randint(100,450)
            y=randint(100,450)
        elif i==1:
            x=randint(450,900)
            y=randint(100,450)
        elif i==2:
            x=randint(450,900)
            y=randint(450,900)
        elif i==3:
            x=randint(100,450)
            y=randint(450,900)
        elif i>3:
            i=i-4
        list.append((x,y))
    return list

def show_point2(x):
    count=0
    list=[]
    for i in range(x):
        if count>3:
            count-=4
        elif count==0:
            x=randint(100.,450.)
            y=randint(100.,450.)
        elif count==1:
            x=randint(100.,450.)
            y=randint(450.,900.)
        elif count==2:
            x=randint(450.,900.)
            y=randint(450.,900.)
        elif count==3:
            x=randint(450.,900.)
            y=randint(100.,450.)
        count+=1
        list.append((x,y))
    return list
            
            


def r_point():
    global count
    x=randint(100,900)
    y=randint(100,900)
    return (x,y)




def show_point3(a):
    list=[]
    for i in range(a):
        (x,y)=r_point()
        list.append((x,y))
    return list

def sum_point(list):
    total_x=0
    total_y=0
    
    for i in range(len(list)):
        total_x+=list[i-1][0]
        total_y+=list[i-1][1]
    return total_x,total_y
        


def multipl(a,b):
    sumofab=0.0
    for i in range(len(a)):
        temp=a[i]*b[i]
        sumofab+=temp
    return sumofab

def pearson(x,y):
    N=len(x)
    sumofx=sum(x)
    sumofy=sum(y)
    sumofxy=multipl(x,y)
    sumofxx=multipl(x,x)
    sumofyy=multipl(y,y)
    upside=sumofxy-sumofx*sumofy/N
    downside=sqrt((sumofxx-float(sumofx**2)/N)*(sumofyy-float(sumofy**2)/N))  
    return upside/downside








while True:
 
    for event in pygame.event.get():

        time_passed=clock.tick(10)
        
        if event.type == QUIT:
            exit()
            output.close()

        elif event.type==KEYDOWN:
            if event.key==K_DOWN:
                screen.fill((41,41,41))
                try_tri=[]
                
            elif event.key==K_UP:
                show_tri=[]
                list_x=sequence(4)
                show_tri=show_point2(4)
                print show_tri

                pygame.draw.polygon(screen,(45,243,94),show_tri,2)

                
                for i in show_tri:           
                    pygame.draw.circle(screen,(45,243,94),i,5)
                output.write('random coordinates:'+str(show_tri))
                output.write(str(datetime.datetime.now())+'\n')
                
            elif event.key==K_LEFT:
                try:
                    pygame.draw.aalines(screen,(50,240,90),True,try_tri,2)
                    output.write('Your coordinates:'+str(try_tri))
                    output.write(str(datetime.datetime.now())+'\n')

                    
                    (x1,y1)=sum_point(try_tri)
                    (x2,y2)=sum_point(show_tri)

                    if x1>x2:
                        acc_x=float(x2)/x1
                    else:
                        acc_x=float(x1)/x2

                    
                    if y1>y2:
                        acc_y=float(y2)/y1
                    else:
                        acc_y=float(y1)/y2
                    acc=acc_y*acc_x
                    print (x1,x2,y1,y2)

                    print ("try:%s"%try_tri)
                    print ("show:%s"%show_tri)
                    try_tri=[]
                    font=pygame.font.SysFont("simon",50)
                    text=font.render("Accurate is:%s"%acc,1,(50,240,90))
                    screen.blit(text,(100,900))
                    
                except:
                    pass
        elif event.type==MOUSEBUTTONDOWN:
            x,y=pygame.mouse.get_pos()
            pygame.draw.circle(screen,(50,240,90),(x,y),3)
            try_tri.append((x,y))

                

            
 

    pygame.display.update()
    

   
    
